#This query returns an estimate of total characters of notes to process per year
WITH note_details AS (
  SELECT DISTINCT 
    ND.MILLENNIUM_EVENT_ID, 
    ND.MILLENNIUM_ENCNTR_ID,
    CE.PARENT_EVENT_ID,
    CE.UPDT_DT_TM
  FROM PCORNET_CDM.CDM_APPROVED.PRIVATE_NOTE_DETAILS AS ND
  JOIN MILLENNIUM.V500.CLINICAL_EVENT AS CE
    ON ND.MILLENNIUM_PARENT_EVENT_ID = CE.PARENT_EVENT_ID
  WHERE LOWER(MILLENNIUM_EVENT_CD_DESC) LIKE ANY ('%clinic note%', '%visit note%')
),
filtered_notes AS (
  SELECT 
    MILLENNIUM_EVENT_ID, 
    MILLENNIUM_ENCNTR_ID
  FROM note_details
  QUALIFY ROW_NUMBER() OVER (PARTITION BY PARENT_EVENT_ID ORDER BY UPDT_DT_TM DESC) = 1
)
SELECT 
  YEAR(PE.ADMIT_DATE) AS YEARS,
  COUNT(DISTINCT PE.PATID) AS TOTAL_PATIENTS,
  COUNT(DISTINCT PE.ENCOUNTERID) AS TOTAL_OUTPATIENTS,
  COUNT(FN.MILLENNIUM_EVENT_ID) AS FINAL_NOTE,
  SUM(LENGTH(CBD.DECOMPRESSED_NOTE)) AS CHAR_LENGTH
FROM PRIVATE_ENCOUNTER PE
JOIN filtered_notes FN
  ON PE.MILLENNIUM_ENCOUNTER_ID = FN.MILLENNIUM_ENCNTR_ID
JOIN MILLENNIUM.V500.CE_BLOB_DECOMPRESSED CBD
  ON FN.MILLENNIUM_EVENT_ID = CBD.EVENT_ID
WHERE FN.MILLENNIUM_EVENT_ID IS NOT NULL
GROUP BY YEARS
ORDER BY YEARS DESC;
